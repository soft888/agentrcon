"""empty message

Revision ID: cc01e67a4637
Revises: 
Create Date: 2025-04-09 15:27:31.941315

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cc01e67a4637'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reconciliation_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_source_mapping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mapping_name', sa.String(length=150), nullable=False),
    sa.Column('source_type', sa.Enum('SOURCE', 'TARGET', name='mapping_source_type_enum', native_enum=False), nullable=False),
    sa.Column('column_mappings', sa.JSON(), nullable=False),
    sa.Column('date_format_string', sa.String(length=50), nullable=True),
    sa.Column('reconciliation_type_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['reconciliation_type_id'], ['reconciliation_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mapping_name')
    )
    with op.batch_alter_table('data_source_mapping', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_data_source_mapping_reconciliation_type_id'), ['reconciliation_type_id'], unique=False)

    op.create_table('reconciliation_job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reconciliation_type_id', sa.Integer(), nullable=False),
    sa.Column('source_file', sa.String(length=255), nullable=False),
    sa.Column('target_file', sa.String(length=255), nullable=False),
    sa.Column('source_mapping_id', sa.Integer(), nullable=False),
    sa.Column('target_mapping_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='jobstatus'), nullable=False),
    sa.Column('celery_task_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('results_summary', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['reconciliation_type_id'], ['reconciliation_type.id'], ),
    sa.ForeignKeyConstraint(['source_mapping_id'], ['data_source_mapping.id'], ),
    sa.ForeignKeyConstraint(['target_mapping_id'], ['data_source_mapping.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reconciliation_job', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reconciliation_job_celery_task_id'), ['celery_task_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reconciliation_job_reconciliation_type_id'), ['reconciliation_type_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reconciliation_job_source_mapping_id'), ['source_mapping_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reconciliation_job_target_mapping_id'), ['target_mapping_id'], unique=False)

    op.create_table('exception_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('exception_id_display', sa.String(length=50), nullable=False),
    sa.Column('exception_type', sa.String(length=100), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['reconciliation_job.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('exception_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_exception_log_exception_id_display'), ['exception_id_display'], unique=True)
        batch_op.create_index(batch_op.f('ix_exception_log_exception_type'), ['exception_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_exception_log_job_id'), ['job_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_exception_log_priority'), ['priority'], unique=False)
        batch_op.create_index(batch_op.f('ix_exception_log_status'), ['status'], unique=False)

    op.create_table('reconciliation_result_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('display_id', sa.String(length=100), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['reconciliation_job.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reconciliation_result_item', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reconciliation_result_item_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_reconciliation_result_item_display_id'), ['display_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reconciliation_result_item_job_id'), ['job_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reconciliation_result_item_status'), ['status'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reconciliation_result_item', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reconciliation_result_item_status'))
        batch_op.drop_index(batch_op.f('ix_reconciliation_result_item_job_id'))
        batch_op.drop_index(batch_op.f('ix_reconciliation_result_item_display_id'))
        batch_op.drop_index(batch_op.f('ix_reconciliation_result_item_date'))

    op.drop_table('reconciliation_result_item')
    with op.batch_alter_table('exception_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_exception_log_status'))
        batch_op.drop_index(batch_op.f('ix_exception_log_priority'))
        batch_op.drop_index(batch_op.f('ix_exception_log_job_id'))
        batch_op.drop_index(batch_op.f('ix_exception_log_exception_type'))
        batch_op.drop_index(batch_op.f('ix_exception_log_exception_id_display'))

    op.drop_table('exception_log')
    with op.batch_alter_table('reconciliation_job', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reconciliation_job_target_mapping_id'))
        batch_op.drop_index(batch_op.f('ix_reconciliation_job_source_mapping_id'))
        batch_op.drop_index(batch_op.f('ix_reconciliation_job_reconciliation_type_id'))
        batch_op.drop_index(batch_op.f('ix_reconciliation_job_celery_task_id'))

    op.drop_table('reconciliation_job')
    with op.batch_alter_table('data_source_mapping', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_data_source_mapping_reconciliation_type_id'))

    op.drop_table('data_source_mapping')
    op.drop_table('reconciliation_type')
    # ### end Alembic commands ###
